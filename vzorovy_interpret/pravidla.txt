PROGRAM -> function DEF_FUNC
DEF_FUNC -> main ( ) STAT end ;
DEF_FUNC -> idFunc ( PARAMS ) STAT end PROGRAM
  PARAMS -> eps
  PARAMS -> id PARAMS_N
  PARAMS_N -> eps
  PARAMS_N -> , id PARAMS_N
STAT -> DEF_VAR STAT_LIST  
DEF_VAR -> eps   
DEF_VAR -> local id INIT ; DEF_VAR
  INIT -> eps
  INIT -> = LIT
    LIT -> literal
STAT_LIST -> eps
STAT_LIST -> COMMAND ; STAT_LIST  
  COMMAND -> if     expression then STAT_LIST else STAT_LIST end
  COMMAND -> while  expression then STAT_LIST end
  COMMAND -> return expression
  COMMAND -> write ( expression EXPRESSION_N )
    EXPRESSION_N -> eps
    EXPRESSION_N -> , expression EXPRESSION_N
  COMMAND -> id = ASSIGN
    ASSIGN -> expression
    ASSIGN -> read ( LIT )
    ASSIGN -> idFunc ( VAR_PARAMS )
      VAR_PARAMS -> eps
      VAR_PARAMS -> VAR VAR_N
      VAR -> LIT
      VAR -> id
      VAR_N -> eps
      VAR_N -> , VAR VAR_N 




function idFunc ( id , id , id ) 
  local id ; 
  id = expression ; 
  if expression then 
    id = idFunc ( literal , id ) ; 
  else 
  end ;
  return expression ; 
end 

function idFunc ( )
  write ( expression , expression , expression ) ;
end   

function idFunc ( )

end 

function main ( )  
  local id = expressiom ;
  while expression then
    id = idFunc ( id , literal ) ;
    id = expression ;
  end ;
end ;